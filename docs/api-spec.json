{
  "openapi": "3.0.3",
  "info": {
    "title": "Gallaa B2B Marketplace API",
    "description": "API for India's premier luxury B2B marketplace with credit solutions",
    "version": "1.0.0",
    "contact": {
      "name": "Gallaa API Support",
      "email": "api-support@gallaa.com",
      "url": "https://gallaa.com/support"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://gallaa.com/license"
    }
  },
  "servers": [
    {
      "url": "https://api.gallaa.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.gallaa.com/v1", 
      "description": "Staging server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "example": "healthy"},
                    "timestamp": {"type": "string", "format": "date-time"},
                    "version": {"type": "string", "example": "1.0.0"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/manufacturer": {
      "post": {
        "summary": "Register a new manufacturer",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Manufacturer registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/auth/register/retailer": {
      "post": {
        "summary": "Register a new retailer", 
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailerRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retailer registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string", "minLength": 8}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/credit/assess": {
      "post": {
        "summary": "Assess credit eligibility",
        "tags": ["Credit"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditAssessmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credit assessment completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditAssessmentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/marketplace/products": {
      "get": {
        "summary": "List marketplace products",
        "tags": ["Marketplace"],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {"type": "string"},
            "description": "Product category filter"
          },
          {
            "name": "minPrice",
            "in": "query", 
            "schema": {"type": "number"},
            "description": "Minimum price filter"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {"type": "number"}, 
            "description": "Maximum price filter"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "default": 1},
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer", "default": 20, "maximum": 100},
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Add a new product",
        "tags": ["Marketplace"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": ["Orders"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "summary": "List user orders",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "shipped", "delivered", "cancelled"]
            }
          },
          {
            "name": "page",
            "in": "query", 
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer", "default": 20, "maximum": 100}
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/payments/create-intent": {
      "post": {
        "summary": "Create payment intent",
        "tags": ["Payments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "currency", "orderId"],
                "properties": {
                  "amount": {"type": "number", "minimum": 1},
                  "currency": {"type": "string", "enum": ["INR", "USD"], "default": "INR"},
                  "orderId": {"type": "string"},
                  "paymentMethod": {"type": "string", "enum": ["razorpay", "stripe"], "default": "razorpay"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment intent created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ManufacturerRegistration": {
        "type": "object",
        "required": ["companyName", "contactPerson", "email", "phone", "gstNumber", "products", "annualRevenue"],
        "properties": {
          "companyName": {"type": "string", "maxLength": 100},
          "contactPerson": {"type": "string", "maxLength": 100},
          "email": {"type": "string", "format": "email"},
          "phone": {"type": "string", "pattern": "^\\+91[6-9]\\d{9}$"},
          "gstNumber": {"type": "string", "pattern": "^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$"},
          "products": {
            "type": "array",
            "items": {"type": "string"},
            "minItems": 1,
            "maxItems": 20
          },
          "annualRevenue": {"type": "number", "minimum": 0},
          "website": {"type": "string", "format": "uri"},
          "address": {
            "type": "object",
            "required": ["line1", "city", "state", "pincode"],
            "properties": {
              "line1": {"type": "string"},
              "line2": {"type": "string"},
              "city": {"type": "string"},
              "state": {"type": "string"},
              "pincode": {"type": "string", "pattern": "^[1-9][0-9]{5}$"}
            }
          }
        }
      },
      "RetailerRegistration": {
        "type": "object",
        "required": ["businessName", "ownerName", "email", "phone", "gstNumber", "storeLocations", "expectedPurchaseVolume"],
        "properties": {
          "businessName": {"type": "string", "maxLength": 100},
          "ownerName": {"type": "string", "maxLength": 100},
          "email": {"type": "string", "format": "email"},
          "phone": {"type": "string", "pattern": "^\\+91[6-9]\\d{9}$"},
          "gstNumber": {"type": "string", "pattern": "^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$"},
          "storeLocations": {"type": "integer", "minimum": 1},
          "expectedPurchaseVolume": {"type": "number", "minimum": 0},
          "businessType": {"type": "string", "enum": ["retail", "wholesale", "online", "hybrid"]},
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "userId": {"type": "string"},
          "message": {"type": "string"},
          "verificationRequired": {"type": "boolean"}
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "token": {"type": "string"},
          "refreshToken": {"type": "string"},
          "expiresIn": {"type": "integer"},
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "role": {"type": "string", "enum": ["manufacturer", "retailer", "admin"]},
          "profile": {
            "oneOf": [
              {"$ref": "#/components/schemas/ManufacturerProfile"},
              {"$ref": "#/components/schemas/RetailerProfile"}
            ]
          },
          "creditLimit": {"type": "number"},
          "verificationStatus": {"type": "string", "enum": ["pending", "verified", "rejected"]},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "ManufacturerProfile": {
        "type": "object",
        "properties": {
          "companyName": {"type": "string"},
          "contactPerson": {"type": "string"},
          "products": {"type": "array", "items": {"type": "string"}},
          "annualRevenue": {"type": "number"},
          "certifications": {"type": "array", "items": {"type": "string"}}
        }
      },
      "RetailerProfile": {
        "type": "object", 
        "properties": {
          "businessName": {"type": "string"},
          "ownerName": {"type": "string"},
          "storeLocations": {"type": "integer"},
          "businessType": {"type": "string"}
        }
      },
      "CreditAssessmentRequest": {
        "type": "object",
        "required": ["requestedAmount", "purpose"],
        "properties": {
          "requestedAmount": {"type": "number", "minimum": 10000, "maximum": 5000000},
          "purpose": {"type": "string", "enum": ["inventory", "expansion", "working_capital"]},
          "financialData": {
            "type": "object",
            "properties": {
              "monthlyRevenue": {"type": "number"},
              "monthlyExpenses": {"type": "number"},
              "existingDebts": {"type": "number"},
              "bankStatements": {"type": "array", "items": {"type": "string"}}
            }
          }
        }
      },
      "CreditAssessmentResponse": {
        "type": "object",
        "properties": {
          "approved": {"type": "boolean"},
          "creditLimit": {"type": "number"},
          "interestRate": {"type": "number"},
          "tenure": {"type": "integer"},
          "conditions": {"type": "array", "items": {"type": "string"}},
          "riskScore": {"type": "integer", "minimum": 300, "maximum": 900},
          "expiresAt": {"type": "string", "format": "date-time"}
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "description": {"type": "string"},
          "category": {"type": "string"},
          "price": {"type": "number"},
          "currency": {"type": "string", "default": "INR"},
          "images": {"type": "array", "items": {"type": "string", "format": "uri"}},
          "specifications": {"type": "object"},
          "manufacturerId": {"type": "string"},
          "availability": {"type": "integer"},
          "minimumOrderQuantity": {"type": "integer", "default": 1},
          "createdAt": {"type": "string", "format": "date-time"},
          "updatedAt": {"type": "string", "format": "date-time"}
        }
      },
      "ProductRequest": {
        "type": "object",
        "required": ["name", "description", "category", "price", "availability"],
        "properties": {
          "name": {"type": "string", "maxLength": 100},
          "description": {"type": "string", "maxLength": 1000},
          "category": {"type": "string"},
          "price": {"type": "number", "minimum": 0},
          "images": {"type": "array", "items": {"type": "string", "format": "uri"}},
          "specifications": {"type": "object"},
          "availability": {"type": "integer", "minimum": 0},
          "minimumOrderQuantity": {"type": "integer", "minimum": 1, "default": 1}
        }
      },
      "ProductListResponse": {
        "type": "object",
        "properties": {
          "products": {"type": "array", "items": {"$ref": "#/components/schemas/Product"}},
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "retailerId": {"type": "string"},
          "manufacturerId": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {"type": "string"},
                "quantity": {"type": "integer"},
                "price": {"type": "number"},
                "total": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "number"},
          "tax": {"type": "number"},
          "shipping": {"type": "number"},
          "total": {"type": "number"},
          "status": {"type": "string", "enum": ["pending", "confirmed", "shipped", "delivered", "cancelled"]},
          "paymentStatus": {"type": "string", "enum": ["pending", "paid", "failed", "refunded"]},
          "shippingAddress": {"$ref": "#/components/schemas/Address"},
          "createdAt": {"type": "string", "format": "date-time"},
          "updatedAt": {"type": "string", "format": "date-time"}
        }
      },
      "OrderRequest": {
        "type": "object",
        "required": ["items", "shippingAddress"],
        "properties": {
          "items": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["productId", "quantity"],
              "properties": {
                "productId": {"type": "string"},
                "quantity": {"type": "integer", "minimum": 1}
              }
            }
          },
          "shippingAddress": {"$ref": "#/components/schemas/Address"},
          "notes": {"type": "string", "maxLength": 500}
        }
      },
      "OrderListResponse": {
        "type": "object",
        "properties": {
          "orders": {"type": "array", "items": {"$ref": "#/components/schemas/Order"}},
          "pagination": {"$ref": "#/components/schemas/Pagination"}
        }
      },
      "PaymentIntentResponse": {
        "type": "object",
        "properties": {
          "clientSecret": {"type": "string"},
          "paymentIntentId": {"type": "string"},
          "amount": {"type": "number"},
          "currency": {"type": "string"}
        }
      },
      "Address": {
        "type": "object",
        "required": ["line1", "city", "state", "pincode"],
        "properties": {
          "line1": {"type": "string"},
          "line2": {"type": "string"},
          "city": {"type": "string"},
          "state": {"type": "string"},
          "pincode": {"type": "string", "pattern": "^[1-9][0-9]{5}$"},
          "country": {"type": "string", "default": "IN"}
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {"type": "integer"},
          "limit": {"type": "integer"},
          "total": {"type": "integer"},
          "pages": {"type": "integer"}
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {"type": "string"},
          "message": {"type": "string"},
          "code": {"type": "string"},
          "details": {"type": "object"}
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}